Object subclass: #BajoCoste	instanceVariableNames: 'zona'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:39'!evolucionar: escenario " lo que no se es como referenciar a un objeto ,,, . arreglar"! !!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:13'!extra^ zona size! !!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:37'!zonaGet^zona! !!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:37'!zonaSet: unaZonazona := unaZona! !Object subclass: #DeLujo	instanceVariableNames: 'visitas'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:16'!aumentarVisitas^visitas + 1! !!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:07'!evolucionar: escenario "no me puedo evolucionar , pero no se como decir que devuelta esto"! !!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:16'!extra^visitas! !Object subclass: #Escenario	instanceVariableNames: 'nombre categoria'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:30'!aumentarVisitas^categoria aumentarVisitas! !!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:06'!evolucionar^categoria evolucionar: self! !!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:30'!fama^ 100 + categoria extra! !Object subclass: #Personaje	instanceVariableNames: 'energia'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:30'!conocerEscenario: escenarioenergia := energia - escenario fama + self consecuenciaDeConocerEscenario: escenario! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:30'!consecuenciaDeConocerEscenario: escenario" ........"! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 08:49'!energiaGet^energia! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 08:49'!energiaSet: unaEnergiaenergia:= unaEnergia! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:33'!esRebelde^ self rebeldia > 10! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:05'!felicidad "se supone que es el metodo comun para sus subclases... yo lo deje asi"! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:34'!interactuar: unPersonajeenergia := energia/2! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:35'!interactuarConMuchos: personajes"el 'do' hace lo mismo que forEach , y lo que esta entre [] seria el abrir y cerrar llaves de wollok" personajes do: [:unPersonaje | unPersonaje interactuar:unPersonaje]! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:07'!rebeldia  "lo que no se es que si esto funcionara ................, borra el comentario por las dudas"^ 1 / self felicidad! !Personaje subclass: #Anfitrion	instanceVariableNames: 'velocidadProcesamieneto recuerdos'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!Personaje subclass: #Huesped	instanceVariableNames: 'minutosRestantes amigos'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!Object subclass: #Recuerdo	instanceVariableNames: 'descripcion escenario'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Recuerdo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:06'!emotividad^ descripcion size + escenario fama! !!Recuerdo methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:18'!escenarioGet^escenario! !!Recuerdo methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:18'!escenarioSet: unEscenarioescenario := unEscenario! !Object subclass: #Trama	instanceVariableNames: 'personajes escenario'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:41'!escenarioGetescenario ! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:41'!escenarioSet: unEscenarioescenario := unEscenario! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:41'!personajesGet^ personajes! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:41'!personajesSet: unosPersonajespersonajes := unosPersonajes! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:05'!renovar escenario evolucionar"recordar que el DO es como ForEach y asi se opera en una lista - solo hice una funcion"personajes do: [:unPersonaje | unPersonaje conocerEscenario: escenario]! !