Object subclass: #BajoCoste	instanceVariableNames: 'zona'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:39'!evolucionar: escenario " lo que no se es como referenciar a un objeto ,,, . arreglar"! !!BajoCoste methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:13'!extra^ zona size! !!BajoCoste methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:02'!zona^zona! !!BajoCoste methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:02'!zona: unaZonazona := unaZona! !Object subclass: #DeLujo	instanceVariableNames: 'visitas'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:16'!aumentarVisitas^visitas + 1! !!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:07'!evolucionar: escenario "no me puedo evolucionar , pero no se como decir que devuelta esto"! !!DeLujo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 00:16'!extra^visitas! !Object subclass: #Escenario	instanceVariableNames: 'nombre categoria'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:30'!aumentarVisitas^categoria aumentarVisitas! !!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:06'!evolucionar^categoria evolucionar: self! !!Escenario methodsFor: 'as yet unclassified' stamp: 'Alex 11/20/2019 23:30'!fama^ 100 + categoria extra! !Object subclass: #Personaje	instanceVariableNames: 'energia'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Personaje methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:13'!energia^energia! !!Personaje methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:13'!energia:unaEnergiaenergia:= unaEnergia! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:30'!conocerEscenario: escenarioenergia := energia - escenario fama + self consecuenciaDeConocerEscenario: escenario! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:30'!consecuenciaDeConocerEscenario: escenario" ........"! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:33'!esRebelde^ self rebeldia > 10! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:05'!felicidad "se supone que es el metodo comun para sus subclases... yo lo deje asi"! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:34'!interactuar: unPersonajeenergia := energia/2! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 10:35'!interactuarConMuchos: personajes"el 'do' hace lo mismo que forEach , y lo que esta entre [] seria el abrir y cerrar llaves de wollok" personajes do: [:unPersonaje | unPersonaje interactuar:unPersonaje]! !!Personaje methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 09:07'!rebeldia  "lo que no se es que si esto funcionara ................, borra el comentario por las dudas"^ 1 / self felicidad! !Personaje subclass: #Anfitrion	instanceVariableNames: 'velocidadProcesamieneto recuerdos'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!Personaje subclass: #Huesped	instanceVariableNames: 'minutosRestantes amigos'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!Object subclass: #Recuerdo	instanceVariableNames: 'descripcion escenario'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Recuerdo methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:14'!escenario^escenario! !!Recuerdo methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:14'!escenario: unEscenarioescenario := unEscenario! !!Recuerdo methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:06'!emotividad^ descripcion size + escenario fama! !Object subclass: #Trama	instanceVariableNames: 'personajes escenario'	classVariableNames: ''	poolDictionaries: ''	category: 'TpFinal'!!Trama methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:16'!escenarioescenario ! !!Trama methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:16'!escenario: unEscenarioescenario := unEscenario! !!Trama methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:17'!personajes^ personajes! !!Trama methodsFor: 'accessing' stamp: 'Alex 11/22/2019 23:17'!personajes: unosPersonajespersonajes := unosPersonajes! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 23:35'!complejidad"arreglar este metodo, por el tema de felicidadPersonajeArreglar, no se como se hace sum en esto"^ escenario fama / self felicidadPersonaje! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 23:16'!cruzar: otraTrama"creo que se refiere a escenarioGet, por que es lo que necesito traer...creo que asi iria con todas :o"self personajesConocenEscenario: (otraTrama escenario).self cruzarPersonajes: (otraTrama personajes)! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 20:44'!cruzarPersonajes: otrosPersonajespersonajes do: [:unPersonaje | unPersonaje interactuarConMuchos: otrosPersonajes]! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 20:53'!esAburrida^ self complejidad < 10! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 23:35'!felicidadPersonaje^ personajes sum: [:unPersonaje | unPersonaje felicidad]! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/22/2019 20:42'!personajesConocenEscenario: unEscenariopersonajes do: [:unPersonaje | unPersonaje conocerEscenario: unEscenario]! !!Trama methodsFor: 'as yet unclassified' stamp: 'Alex 11/21/2019 11:05'!renovar escenario evolucionar"recordar que el DO es como ForEach y asi se opera en una lista - solo hice una funcion"personajes do: [:unPersonaje | unPersonaje conocerEscenario: escenario]! !